name: 'Deploy'

on:
  push:
    branches:
      - master

jobs:
  version:
    name: Bump version
    runs-on: ubuntu-latest
    container: artronics/pipeline:0.1.6
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: version
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          deploy --bump=minor --github-context="$GITHUB_CONTEXT" --git-user-name="pipeline local" \
            --git-user-email="pipeline@pipeline.com"

      - name: Output current version
        id: current_version
        run: echo "::set-output name=VERSION::$(poetry version -s)"

    outputs:
      current_version: ${{ steps.current_version.outputs.VERSION }}

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set version and Docker user
        id: docker_vars
        run: echo "::set-output name=DOCKERHUB_USERNAME::artronics"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ steps.docker_vars.outputs.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: check
        env:
          VERSION: ${{ needs.version.outputs.current_version }}
          USERNAME: ${{ steps.docker_vars.outputs.DOCKERHUB_USERNAME }}
        run: |
          echo version $VERSION
          echo username $DOCKERHUB_USERNAME 

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.docker_vars.outputs.DOCKERHUB_USERNAME }}/pipeline:latest,${{ steps.docker_vars.outputs.DOCKERHUB_USERNAME }}/pipeline:${{ needs.version.outputs.current_version }}
